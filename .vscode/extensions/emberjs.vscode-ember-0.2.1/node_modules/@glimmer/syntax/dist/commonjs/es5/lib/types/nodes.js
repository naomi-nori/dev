'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isCall = isCall;
exports.isLiteral = isLiteral;
function isCall(node) {
    return node.type === 'SubExpression' || node.type === 'MustacheStatement' && node.path.type === 'PathExpression';
}
function isLiteral(input) {
    return !!(typeof input === 'object' && input.type.match(/Literal$/));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9AZ2xpbW1lci9zeW50YXgvbGliL3R5cGVzL25vZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Z0JBOEV1QixBQUFTLE1BQzlCLEFBQU87V0FDTCxBQUFJLEtBQUMsQUFBSSxTQUFLLEFBQWUsQUFDN0IsbUJBQUMsQUFBSSxLQUFDLEFBQUksU0FBSyxBQUFtQix1QkFBSSxBQUFJLEtBQUMsQUFBSSxLQUFDLEFBQUksU0FBSyxBQUFnQixBQUFDLEFBQzNFLEFBQUMsQUFDSixBQUFDO0FBNkZELEFBQU07bUJBQW9CLEFBQW9CLE9BQzVDO1dBQU8sQ0FBQyxBQUFDLEVBQUMsT0FBTyxBQUFLLFVBQUssQUFBUSxZQUFJLEFBQUssTUFBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQVUsQUFBQyxBQUFDLEFBQUMsQUFDdkUsQUFBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIE9wdGlvbjxUPiA9IFQgfCBudWxsO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJhc2VOb2RlIHtcbiAgLy8gRXZlcnkgbGVhZiBpbnRlcmZhY2UgdGhhdCBleHRlbmRzIEJhc2VOb2RlIG11c3Qgc3BlY2lmeSBhIHR5cGUgcHJvcGVydHkuXG4gIC8vIFRoZSB0eXBlIHByb3BlcnR5IHNob3VsZCBiZSBhIHN0cmluZyBsaXRlcmFsLiBGb3IgZXhhbXBsZSwgSWRlbnRpZmllclxuICAvLyBoYXM6IGB0eXBlOiBcIklkZW50aWZpZXJcImBcbiAgdHlwZTogTm9kZVR5cGU7XG4gIGxvYzogU291cmNlTG9jYXRpb247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU291cmNlTG9jYXRpb24ge1xuICBzb3VyY2U/OiBPcHRpb248c3RyaW5nPjtcbiAgc3RhcnQ6IFBvc2l0aW9uO1xuICBlbmQ6IFBvc2l0aW9uO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBvc2l0aW9uIHtcbiAgLyoqID49IDEgKi9cbiAgbGluZTogbnVtYmVyO1xuICAvKiogPj0gMCAqL1xuICBjb2x1bW46IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9ncmFtIGV4dGVuZHMgQmFzZU5vZGUge1xuICB0eXBlOiAnUHJvZ3JhbSc7XG4gIGJvZHk6IFN0YXRlbWVudFtdO1xuICBibG9ja1BhcmFtczogc3RyaW5nW107XG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlbWVudCA9XG4gIHwgTXVzdGFjaGVTdGF0ZW1lbnRcbiAgfCBCbG9ja1N0YXRlbWVudFxuICB8IFBhcnRpYWxTdGF0ZW1lbnRcbiAgfCBNdXN0YWNoZUNvbW1lbnRTdGF0ZW1lbnRcbiAgfCBDb21tZW50U3RhdGVtZW50XG4gIHwgVGV4dE5vZGVcbiAgfCBFbGVtZW50Tm9kZTtcblxuZXhwb3J0IGludGVyZmFjZSBDYWxsIGV4dGVuZHMgQmFzZU5vZGUge1xuICBuYW1lPzogUGF0aEV4cHJlc3Npb24gfCBTdWJFeHByZXNzaW9uO1xuICBwYXRoOiBQYXRoRXhwcmVzc2lvbjtcbiAgcGFyYW1zOiBFeHByZXNzaW9uW107XG4gIGhhc2g6IEhhc2g7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTXVzdGFjaGVTdGF0ZW1lbnQgZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdNdXN0YWNoZVN0YXRlbWVudCc7XG4gIHBhdGg6IFBhdGhFeHByZXNzaW9uIHwgTGl0ZXJhbDtcbiAgcGFyYW1zOiBFeHByZXNzaW9uW107XG4gIGhhc2g6IEhhc2g7XG4gIGVzY2FwZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmxvY2tTdGF0ZW1lbnQgZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdCbG9ja1N0YXRlbWVudCc7XG4gIHBhdGg6IFBhdGhFeHByZXNzaW9uO1xuICBwYXJhbXM6IEV4cHJlc3Npb25bXTtcbiAgaGFzaDogSGFzaDtcbiAgcHJvZ3JhbTogUHJvZ3JhbTtcbiAgaW52ZXJzZT86IE9wdGlvbjxQcm9ncmFtPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFbGVtZW50TW9kaWZpZXJTdGF0ZW1lbnQgZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdFbGVtZW50TW9kaWZpZXJTdGF0ZW1lbnQnO1xuICBwYXRoOiBQYXRoRXhwcmVzc2lvbjtcbiAgcGFyYW1zOiBFeHByZXNzaW9uW107XG4gIGhhc2g6IEhhc2g7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFydGlhbFN0YXRlbWVudCBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ1BhcnRpYWxTdGF0ZW1lbnQnO1xuICBuYW1lOiBQYXRoRXhwcmVzc2lvbiB8IFN1YkV4cHJlc3Npb247XG4gIHBhcmFtczogRXhwcmVzc2lvbltdO1xuICBoYXNoOiBIYXNoO1xuICBpbmRlbnQ6IHN0cmluZztcbiAgc3RyaXA6IFN0cmlwRmxhZ3M7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NhbGwobm9kZTogYW55KTogbm9kZSBpcyBDYWxsIHtcbiAgcmV0dXJuIChcbiAgICBub2RlLnR5cGUgPT09ICdTdWJFeHByZXNzaW9uJyB8fFxuICAgIChub2RlLnR5cGUgPT09ICdNdXN0YWNoZVN0YXRlbWVudCcgJiYgbm9kZS5wYXRoLnR5cGUgPT09ICdQYXRoRXhwcmVzc2lvbicpXG4gICk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29tbWVudFN0YXRlbWVudCBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ0NvbW1lbnRTdGF0ZW1lbnQnO1xuICB2YWx1ZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE11c3RhY2hlQ29tbWVudFN0YXRlbWVudCBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ011c3RhY2hlQ29tbWVudFN0YXRlbWVudCc7XG4gIHZhbHVlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRWxlbWVudE5vZGUgZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdFbGVtZW50Tm9kZSc7XG4gIHRhZzogc3RyaW5nO1xuICBzZWxmQ2xvc2luZzogYm9vbGVhbjtcbiAgYXR0cmlidXRlczogQXR0ck5vZGVbXTtcbiAgYmxvY2tQYXJhbXM6IHN0cmluZ1tdO1xuICBtb2RpZmllcnM6IEVsZW1lbnRNb2RpZmllclN0YXRlbWVudFtdO1xuICBjb21tZW50czogTXVzdGFjaGVDb21tZW50U3RhdGVtZW50W107XG4gIGNoaWxkcmVuOiBTdGF0ZW1lbnRbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdHRyTm9kZSBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ0F0dHJOb2RlJztcbiAgbmFtZTogc3RyaW5nO1xuICB2YWx1ZTogVGV4dE5vZGUgfCBNdXN0YWNoZVN0YXRlbWVudCB8IENvbmNhdFN0YXRlbWVudDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUZXh0Tm9kZSBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ1RleHROb2RlJztcbiAgY2hhcnM6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25jYXRTdGF0ZW1lbnQgZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdDb25jYXRTdGF0ZW1lbnQnO1xuICBwYXJ0czogKFRleHROb2RlIHwgTXVzdGFjaGVTdGF0ZW1lbnQpW107XG59XG5cbmV4cG9ydCB0eXBlIEV4cHJlc3Npb24gPSBTdWJFeHByZXNzaW9uIHwgUGF0aEV4cHJlc3Npb24gfCBMaXRlcmFsO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN1YkV4cHJlc3Npb24gZXh0ZW5kcyBDYWxsIHtcbiAgdHlwZTogJ1N1YkV4cHJlc3Npb24nO1xuICBwYXRoOiBQYXRoRXhwcmVzc2lvbjtcbiAgcGFyYW1zOiBFeHByZXNzaW9uW107XG4gIGhhc2g6IEhhc2g7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGF0aEV4cHJlc3Npb24gZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdQYXRoRXhwcmVzc2lvbic7XG4gIGRhdGE6IGJvb2xlYW47XG4gIG9yaWdpbmFsOiBzdHJpbmc7XG4gIHRoaXM6IGJvb2xlYW47XG4gIHBhcnRzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IHR5cGUgTGl0ZXJhbCA9XG4gIHwgU3RyaW5nTGl0ZXJhbFxuICB8IEJvb2xlYW5MaXRlcmFsXG4gIHwgTnVtYmVyTGl0ZXJhbFxuICB8IFVuZGVmaW5lZExpdGVyYWxcbiAgfCBOdWxsTGl0ZXJhbDtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdMaXRlcmFsIGV4dGVuZHMgQmFzZU5vZGUge1xuICB0eXBlOiAnU3RyaW5nTGl0ZXJhbCc7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIG9yaWdpbmFsOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQm9vbGVhbkxpdGVyYWwgZXh0ZW5kcyBCYXNlTm9kZSB7XG4gIHR5cGU6ICdCb29sZWFuTGl0ZXJhbCc7XG4gIHZhbHVlOiBib29sZWFuO1xuICBvcmlnaW5hbDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBOdW1iZXJMaXRlcmFsIGV4dGVuZHMgQmFzZU5vZGUge1xuICB0eXBlOiAnTnVtYmVyTGl0ZXJhbCc7XG4gIHZhbHVlOiBudW1iZXI7XG4gIG9yaWdpbmFsOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVW5kZWZpbmVkTGl0ZXJhbCBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ1VuZGVmaW5lZExpdGVyYWwnO1xuICB2YWx1ZTogdW5kZWZpbmVkO1xuICBvcmlnaW5hbDogdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE51bGxMaXRlcmFsIGV4dGVuZHMgQmFzZU5vZGUge1xuICB0eXBlOiAnTnVsbExpdGVyYWwnO1xuICB2YWx1ZTogbnVsbDtcbiAgb3JpZ2luYWw6IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0xpdGVyYWwoaW5wdXQ6IE5vZGUgfCBzdHJpbmcpOiBpbnB1dCBpcyBMaXRlcmFsIHtcbiAgcmV0dXJuICEhKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcgJiYgaW5wdXQudHlwZS5tYXRjaCgvTGl0ZXJhbCQvKSk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSGFzaCBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ0hhc2gnO1xuICBwYWlyczogSGFzaFBhaXJbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBIYXNoUGFpciBleHRlbmRzIEJhc2VOb2RlIHtcbiAgdHlwZTogJ0hhc2hQYWlyJztcbiAga2V5OiBzdHJpbmc7XG4gIHZhbHVlOiBFeHByZXNzaW9uO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmlwRmxhZ3Mge1xuICBvcGVuOiBib29sZWFuO1xuICBjbG9zZTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IHR5cGUgTm9kZVR5cGUgPSBrZXlvZiBOb2RlcztcblxuZXhwb3J0IHR5cGUgTm9kZSA9IE5vZGVzW05vZGVUeXBlXTtcblxuZXhwb3J0IGludGVyZmFjZSBOb2RlcyB7XG4gIFByb2dyYW06IFByb2dyYW07XG4gIEVsZW1lbnROb2RlOiBFbGVtZW50Tm9kZTtcbiAgQXR0ck5vZGU6IEF0dHJOb2RlO1xuICBUZXh0Tm9kZTogVGV4dE5vZGU7XG4gIE11c3RhY2hlU3RhdGVtZW50OiBNdXN0YWNoZVN0YXRlbWVudDtcbiAgQmxvY2tTdGF0ZW1lbnQ6IEJsb2NrU3RhdGVtZW50O1xuICBQYXJ0aWFsU3RhdGVtZW50OiBQYXJ0aWFsU3RhdGVtZW50O1xuICBDb25jYXRTdGF0ZW1lbnQ6IENvbmNhdFN0YXRlbWVudDtcbiAgTXVzdGFjaGVDb21tZW50U3RhdGVtZW50OiBNdXN0YWNoZUNvbW1lbnRTdGF0ZW1lbnQ7XG4gIEVsZW1lbnRNb2RpZmllclN0YXRlbWVudDogRWxlbWVudE1vZGlmaWVyU3RhdGVtZW50O1xuICBDb21tZW50U3RhdGVtZW50OiBDb21tZW50U3RhdGVtZW50O1xuICBQYXRoRXhwcmVzc2lvbjogUGF0aEV4cHJlc3Npb247XG4gIFN1YkV4cHJlc3Npb246IFN1YkV4cHJlc3Npb247XG4gIEhhc2g6IEhhc2g7XG4gIEhhc2hQYWlyOiBIYXNoUGFpcjtcbiAgU3RyaW5nTGl0ZXJhbDogU3RyaW5nTGl0ZXJhbDtcbiAgQm9vbGVhbkxpdGVyYWw6IEJvb2xlYW5MaXRlcmFsO1xuICBOdW1iZXJMaXRlcmFsOiBOdW1iZXJMaXRlcmFsO1xuICBVbmRlZmluZWRMaXRlcmFsOiBVbmRlZmluZWRMaXRlcmFsO1xuICBOdWxsTGl0ZXJhbDogTnVsbExpdGVyYWw7XG59XG4iXX0=